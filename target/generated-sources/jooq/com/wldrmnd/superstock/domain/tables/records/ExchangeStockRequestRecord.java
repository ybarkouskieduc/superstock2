/*
 * This file is generated by jOOQ.
 */
package com.wldrmnd.superstock.domain.tables.records;


import com.wldrmnd.superstock.domain.tables.ExchangeStockRequest;

import java.math.BigDecimal;
import java.sql.Timestamp;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ExchangeStockRequestRecord extends UpdatableRecordImpl<ExchangeStockRequestRecord> implements Record7<Long, Long, Long, BigDecimal, BigDecimal, Timestamp, Timestamp> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>superstock.exchange_stock_request.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>superstock.exchange_stock_request.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>superstock.exchange_stock_request.user_id</code>.
     */
    public void setUserId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>superstock.exchange_stock_request.user_id</code>.
     */
    public Long getUserId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>superstock.exchange_stock_request.stock_id</code>.
     */
    public void setStockId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>superstock.exchange_stock_request.stock_id</code>.
     */
    public Long getStockId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>superstock.exchange_stock_request.amount</code>.
     */
    public void setAmount(BigDecimal value) {
        set(3, value);
    }

    /**
     * Getter for <code>superstock.exchange_stock_request.amount</code>.
     */
    public BigDecimal getAmount() {
        return (BigDecimal) get(3);
    }

    /**
     * Setter for <code>superstock.exchange_stock_request.desired_price</code>.
     */
    public void setDesiredPrice(BigDecimal value) {
        set(4, value);
    }

    /**
     * Getter for <code>superstock.exchange_stock_request.desired_price</code>.
     */
    public BigDecimal getDesiredPrice() {
        return (BigDecimal) get(4);
    }

    /**
     * Setter for <code>superstock.exchange_stock_request.created_at</code>.
     */
    public void setCreatedAt(Timestamp value) {
        set(5, value);
    }

    /**
     * Getter for <code>superstock.exchange_stock_request.created_at</code>.
     */
    public Timestamp getCreatedAt() {
        return (Timestamp) get(5);
    }

    /**
     * Setter for <code>superstock.exchange_stock_request.executed_at</code>.
     */
    public void setExecutedAt(Timestamp value) {
        set(6, value);
    }

    /**
     * Getter for <code>superstock.exchange_stock_request.executed_at</code>.
     */
    public Timestamp getExecutedAt() {
        return (Timestamp) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, Long, Long, BigDecimal, BigDecimal, Timestamp, Timestamp> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Long, Long, Long, BigDecimal, BigDecimal, Timestamp, Timestamp> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return ExchangeStockRequest.EXCHANGE_STOCK_REQUEST.ID;
    }

    @Override
    public Field<Long> field2() {
        return ExchangeStockRequest.EXCHANGE_STOCK_REQUEST.USER_ID;
    }

    @Override
    public Field<Long> field3() {
        return ExchangeStockRequest.EXCHANGE_STOCK_REQUEST.STOCK_ID;
    }

    @Override
    public Field<BigDecimal> field4() {
        return ExchangeStockRequest.EXCHANGE_STOCK_REQUEST.AMOUNT;
    }

    @Override
    public Field<BigDecimal> field5() {
        return ExchangeStockRequest.EXCHANGE_STOCK_REQUEST.DESIRED_PRICE;
    }

    @Override
    public Field<Timestamp> field6() {
        return ExchangeStockRequest.EXCHANGE_STOCK_REQUEST.CREATED_AT;
    }

    @Override
    public Field<Timestamp> field7() {
        return ExchangeStockRequest.EXCHANGE_STOCK_REQUEST.EXECUTED_AT;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getUserId();
    }

    @Override
    public Long component3() {
        return getStockId();
    }

    @Override
    public BigDecimal component4() {
        return getAmount();
    }

    @Override
    public BigDecimal component5() {
        return getDesiredPrice();
    }

    @Override
    public Timestamp component6() {
        return getCreatedAt();
    }

    @Override
    public Timestamp component7() {
        return getExecutedAt();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getUserId();
    }

    @Override
    public Long value3() {
        return getStockId();
    }

    @Override
    public BigDecimal value4() {
        return getAmount();
    }

    @Override
    public BigDecimal value5() {
        return getDesiredPrice();
    }

    @Override
    public Timestamp value6() {
        return getCreatedAt();
    }

    @Override
    public Timestamp value7() {
        return getExecutedAt();
    }

    @Override
    public ExchangeStockRequestRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public ExchangeStockRequestRecord value2(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public ExchangeStockRequestRecord value3(Long value) {
        setStockId(value);
        return this;
    }

    @Override
    public ExchangeStockRequestRecord value4(BigDecimal value) {
        setAmount(value);
        return this;
    }

    @Override
    public ExchangeStockRequestRecord value5(BigDecimal value) {
        setDesiredPrice(value);
        return this;
    }

    @Override
    public ExchangeStockRequestRecord value6(Timestamp value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public ExchangeStockRequestRecord value7(Timestamp value) {
        setExecutedAt(value);
        return this;
    }

    @Override
    public ExchangeStockRequestRecord values(Long value1, Long value2, Long value3, BigDecimal value4, BigDecimal value5, Timestamp value6, Timestamp value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ExchangeStockRequestRecord
     */
    public ExchangeStockRequestRecord() {
        super(ExchangeStockRequest.EXCHANGE_STOCK_REQUEST);
    }

    /**
     * Create a detached, initialised ExchangeStockRequestRecord
     */
    public ExchangeStockRequestRecord(Long id, Long userId, Long stockId, BigDecimal amount, BigDecimal desiredPrice, Timestamp createdAt, Timestamp executedAt) {
        super(ExchangeStockRequest.EXCHANGE_STOCK_REQUEST);

        setId(id);
        setUserId(userId);
        setStockId(stockId);
        setAmount(amount);
        setDesiredPrice(desiredPrice);
        setCreatedAt(createdAt);
        setExecutedAt(executedAt);
    }
}
