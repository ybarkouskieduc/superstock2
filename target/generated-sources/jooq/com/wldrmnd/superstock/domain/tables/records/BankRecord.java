/*
 * This file is generated by jOOQ.
 */
package com.wldrmnd.superstock.domain.tables.records;


import com.wldrmnd.superstock.domain.tables.Bank;

import java.sql.Timestamp;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BankRecord extends UpdatableRecordImpl<BankRecord> implements Record5<Long, String, String, String, Timestamp> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>superstock.bank.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>superstock.bank.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>superstock.bank.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>superstock.bank.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>superstock.bank.description</code>.
     */
    public void setDescription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>superstock.bank.description</code>.
     */
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>superstock.bank.country</code>.
     */
    public void setCountry(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>superstock.bank.country</code>.
     */
    public String getCountry() {
        return (String) get(3);
    }

    /**
     * Setter for <code>superstock.bank.created_at</code>.
     */
    public void setCreatedAt(Timestamp value) {
        set(4, value);
    }

    /**
     * Getter for <code>superstock.bank.created_at</code>.
     */
    public Timestamp getCreatedAt() {
        return (Timestamp) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, String, String, String, Timestamp> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, String, String, String, Timestamp> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Bank.BANK.ID;
    }

    @Override
    public Field<String> field2() {
        return Bank.BANK.NAME;
    }

    @Override
    public Field<String> field3() {
        return Bank.BANK.DESCRIPTION;
    }

    @Override
    public Field<String> field4() {
        return Bank.BANK.COUNTRY;
    }

    @Override
    public Field<Timestamp> field5() {
        return Bank.BANK.CREATED_AT;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getDescription();
    }

    @Override
    public String component4() {
        return getCountry();
    }

    @Override
    public Timestamp component5() {
        return getCreatedAt();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getDescription();
    }

    @Override
    public String value4() {
        return getCountry();
    }

    @Override
    public Timestamp value5() {
        return getCreatedAt();
    }

    @Override
    public BankRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public BankRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public BankRecord value3(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public BankRecord value4(String value) {
        setCountry(value);
        return this;
    }

    @Override
    public BankRecord value5(Timestamp value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public BankRecord values(Long value1, String value2, String value3, String value4, Timestamp value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BankRecord
     */
    public BankRecord() {
        super(Bank.BANK);
    }

    /**
     * Create a detached, initialised BankRecord
     */
    public BankRecord(Long id, String name, String description, String country, Timestamp createdAt) {
        super(Bank.BANK);

        setId(id);
        setName(name);
        setDescription(description);
        setCountry(country);
        setCreatedAt(createdAt);
    }
}
