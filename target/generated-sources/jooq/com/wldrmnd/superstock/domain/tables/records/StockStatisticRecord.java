/*
 * This file is generated by jOOQ.
 */
package com.wldrmnd.superstock.domain.tables.records;


import com.wldrmnd.superstock.domain.tables.StockStatistic;

import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StockStatisticRecord extends UpdatableRecordImpl<StockStatisticRecord> implements Record5<Long, Long, BigDecimal, Long, BigDecimal> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>superstock.stock_statistic.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>superstock.stock_statistic.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>superstock.stock_statistic.stock_id</code>.
     */
    public void setStockId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>superstock.stock_statistic.stock_id</code>.
     */
    public Long getStockId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>superstock.stock_statistic.dividend</code>.
     */
    public void setDividend(BigDecimal value) {
        set(2, value);
    }

    /**
     * Getter for <code>superstock.stock_statistic.dividend</code>.
     */
    public BigDecimal getDividend() {
        return (BigDecimal) get(2);
    }

    /**
     * Setter for <code>superstock.stock_statistic.volume</code>.
     */
    public void setVolume(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>superstock.stock_statistic.volume</code>.
     */
    public Long getVolume() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>superstock.stock_statistic.market_value</code>.
     */
    public void setMarketValue(BigDecimal value) {
        set(4, value);
    }

    /**
     * Getter for <code>superstock.stock_statistic.market_value</code>.
     */
    public BigDecimal getMarketValue() {
        return (BigDecimal) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, Long, BigDecimal, Long, BigDecimal> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, Long, BigDecimal, Long, BigDecimal> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return StockStatistic.STOCK_STATISTIC.ID;
    }

    @Override
    public Field<Long> field2() {
        return StockStatistic.STOCK_STATISTIC.STOCK_ID;
    }

    @Override
    public Field<BigDecimal> field3() {
        return StockStatistic.STOCK_STATISTIC.DIVIDEND;
    }

    @Override
    public Field<Long> field4() {
        return StockStatistic.STOCK_STATISTIC.VOLUME;
    }

    @Override
    public Field<BigDecimal> field5() {
        return StockStatistic.STOCK_STATISTIC.MARKET_VALUE;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getStockId();
    }

    @Override
    public BigDecimal component3() {
        return getDividend();
    }

    @Override
    public Long component4() {
        return getVolume();
    }

    @Override
    public BigDecimal component5() {
        return getMarketValue();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getStockId();
    }

    @Override
    public BigDecimal value3() {
        return getDividend();
    }

    @Override
    public Long value4() {
        return getVolume();
    }

    @Override
    public BigDecimal value5() {
        return getMarketValue();
    }

    @Override
    public StockStatisticRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public StockStatisticRecord value2(Long value) {
        setStockId(value);
        return this;
    }

    @Override
    public StockStatisticRecord value3(BigDecimal value) {
        setDividend(value);
        return this;
    }

    @Override
    public StockStatisticRecord value4(Long value) {
        setVolume(value);
        return this;
    }

    @Override
    public StockStatisticRecord value5(BigDecimal value) {
        setMarketValue(value);
        return this;
    }

    @Override
    public StockStatisticRecord values(Long value1, Long value2, BigDecimal value3, Long value4, BigDecimal value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StockStatisticRecord
     */
    public StockStatisticRecord() {
        super(StockStatistic.STOCK_STATISTIC);
    }

    /**
     * Create a detached, initialised StockStatisticRecord
     */
    public StockStatisticRecord(Long id, Long stockId, BigDecimal dividend, Long volume, BigDecimal marketValue) {
        super(StockStatistic.STOCK_STATISTIC);

        setId(id);
        setStockId(stockId);
        setDividend(dividend);
        setVolume(volume);
        setMarketValue(marketValue);
    }
}
