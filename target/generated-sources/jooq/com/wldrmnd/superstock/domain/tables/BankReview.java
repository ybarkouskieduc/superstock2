/*
 * This file is generated by jOOQ.
 */
package com.wldrmnd.superstock.domain.tables;


import com.wldrmnd.superstock.domain.Keys;
import com.wldrmnd.superstock.domain.Superstock;
import com.wldrmnd.superstock.domain.tables.records.BankReviewRecord;

import java.sql.Timestamp;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BankReview extends TableImpl<BankReviewRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>superstock.bank_review</code>
     */
    public static final BankReview BANK_REVIEW = new BankReview();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BankReviewRecord> getRecordType() {
        return BankReviewRecord.class;
    }

    /**
     * The column <code>superstock.bank_review.id</code>.
     */
    public final TableField<BankReviewRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>superstock.bank_review.bank_id</code>.
     */
    public final TableField<BankReviewRecord, Long> BANK_ID = createField(DSL.name("bank_id"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>superstock.bank_review.user_id</code>.
     */
    public final TableField<BankReviewRecord, Long> USER_ID = createField(DSL.name("user_id"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>superstock.bank_review.rate</code>.
     */
    public final TableField<BankReviewRecord, Integer> RATE = createField(DSL.name("rate"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>superstock.bank_review.review</code>.
     */
    public final TableField<BankReviewRecord, String> REVIEW = createField(DSL.name("review"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>superstock.bank_review.created_at</code>.
     */
    public final TableField<BankReviewRecord, Timestamp> CREATED_AT = createField(DSL.name("created_at"), SQLDataType.TIMESTAMP(0).nullable(false), this, "");

    private BankReview(Name alias, Table<BankReviewRecord> aliased) {
        this(alias, aliased, null);
    }

    private BankReview(Name alias, Table<BankReviewRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>superstock.bank_review</code> table reference
     */
    public BankReview(String alias) {
        this(DSL.name(alias), BANK_REVIEW);
    }

    /**
     * Create an aliased <code>superstock.bank_review</code> table reference
     */
    public BankReview(Name alias) {
        this(alias, BANK_REVIEW);
    }

    /**
     * Create a <code>superstock.bank_review</code> table reference
     */
    public BankReview() {
        this(DSL.name("bank_review"), null);
    }

    public <O extends Record> BankReview(Table<O> child, ForeignKey<O, BankReviewRecord> key) {
        super(child, key, BANK_REVIEW);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Superstock.SUPERSTOCK;
    }

    @Override
    public Identity<BankReviewRecord, Long> getIdentity() {
        return (Identity<BankReviewRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<BankReviewRecord> getPrimaryKey() {
        return Keys.KEY_BANK_REVIEW_PRIMARY;
    }

    @Override
    public BankReview as(String alias) {
        return new BankReview(DSL.name(alias), this);
    }

    @Override
    public BankReview as(Name alias) {
        return new BankReview(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public BankReview rename(String name) {
        return new BankReview(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public BankReview rename(Name name) {
        return new BankReview(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, Long, Long, Integer, String, Timestamp> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
